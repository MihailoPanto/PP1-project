INFO  20:57:45,289 - Compiling source file: C:\Users\Korisnik\Desktop\github\PP1-project\MJCompiler\test\program1.mj
INFO  20:57:45,332 - #2 program
INFO  20:57:45,332 - #41 mihailo
INFO  20:57:45,332 - #10 namespace
INFO  20:57:45,333 - #41 Miki
INFO  20:57:45,333 - #35 {
INFO  20:57:45,334 - #41 int
INFO  20:57:45,335 - #41 a
INFO  20:57:45,336 - #27 ;
INFO  20:57:45,336 - #41 char
INFO  20:57:45,336 - #41 d
INFO  20:57:45,336 - #27 ;
INFO  20:57:45,337 - #41 char
INFO  20:57:45,337 - #41 e
INFO  20:57:45,337 - #33 [
INFO  20:57:45,337 - #34 ]
INFO  20:57:45,337 - #27 ;
INFO  20:57:45,337 - #3 const
INFO  20:57:45,337 - #41 char
INFO  20:57:45,337 - #41 f
INFO  20:57:45,338 - #24 =
INFO  20:57:45,338 - #42 'f'
INFO  20:57:45,338 - #27 ;
INFO  20:57:45,340 - #35 {
INFO  20:57:45,340 - #36 }
INFO  20:57:45,340 - #36 }
INFO  20:57:45,342 - #41 int
INFO  20:57:45,343 - #41 a
INFO  20:57:45,343 - #29 ,
INFO  20:57:45,343 - #41 b
INFO  20:57:45,343 - #29 ,
INFO  20:57:45,344 - #41 c
INFO  20:57:45,344 - #33 [
INFO  20:57:45,344 - #34 ]
INFO  20:57:45,344 - #27 ;
INFO  20:57:45,344 - #3 const
INFO  20:57:45,344 - #41 int
INFO  20:57:45,344 - #41 g
INFO  20:57:45,344 - #24 =
INFO  20:57:45,344 - #40 1
INFO  20:57:45,344 - #29 ,
INFO  20:57:45,344 - #41 h
INFO  20:57:45,344 - #24 =
INFO  20:57:45,344 - #40 2
INFO  20:57:45,345 - #27 ;
INFO  20:57:45,345 - #41 char
INFO  20:57:45,345 - #41 aa
INFO  20:57:45,345 - #27 ;
INFO  20:57:45,345 - #3 const
INFO  20:57:45,345 - #41 int
INFO  20:57:45,345 - #41 xx
INFO  20:57:45,345 - #24 =
INFO  20:57:45,345 - #40 2
INFO  20:57:45,345 - #27 ;
INFO  20:57:45,345 - #41 bool
INFO  20:57:45,345 - #41 abc
INFO  20:57:45,346 - #27 ;
INFO  20:57:45,346 - #35 {
INFO  20:57:45,346 - #9 void
INFO  20:57:45,346 - #41 main
INFO  20:57:45,346 - #31 (
INFO  20:57:45,346 - #32 )
INFO  20:57:45,347 - #35 {
INFO  20:57:45,348 - #41 Miki
INFO  20:57:45,349 - #37 ::
INFO  20:57:45,350 - #41 a
INFO  20:57:45,350 - #24 =
INFO  20:57:45,350 - #40 2
INFO  20:57:45,351 - #27 ;
INFO  20:57:45,351 - #41 Miki
INFO  20:57:45,352 - #37 ::
INFO  20:57:45,355 - #41 f
INFO  20:57:45,355 - #24 =
INFO  20:57:45,355 - #42 'c'
INFO  20:57:45,355 - #27 ;
INFO  20:57:45,355 - #36 }
INFO  20:57:45,355 - #36 }
INFO  20:57:45,370 - Program(
  ProgName(
   mihailo
  ) [ProgName]
  NameSpacesList(
    NoNameSpacesList(
    ) [NoNameSpacesList]
    Namespace(
      NamespaceName(
       Miki
      ) [NamespaceName]
      ConstVarDeclarationList(
        ConstVarDeclarationList(
          ConstVarDeclarationList(
            ConstVarDeclarationList(
              NoConstVarDeclarationList(
              ) [NoConstVarDeclarationList]
              VarCVDeclaration(
                TypeSemiVarDecl(
                  Type(
                   int
                  ) [Type]
                  NoCommaVarDeclList(
                    VDeclaration(
                     a
                    ) [VDeclaration]
                  ) [NoCommaVarDeclList]
                ) [TypeSemiVarDecl]
              ) [VarCVDeclaration]
            ) [ConstVarDeclarationList]
            VarCVDeclaration(
              TypeSemiVarDecl(
                Type(
                 char
                ) [Type]
                NoCommaVarDeclList(
                  VDeclaration(
                   d
                  ) [VDeclaration]
                ) [NoCommaVarDeclList]
              ) [TypeSemiVarDecl]
            ) [VarCVDeclaration]
          ) [ConstVarDeclarationList]
          VarCVDeclaration(
            TypeSemiVarDecl(
              Type(
               char
              ) [Type]
              NoCommaVarDeclList(
                VArrayDeclaration(
                 e
                ) [VArrayDeclaration]
              ) [NoCommaVarDeclList]
            ) [TypeSemiVarDecl]
          ) [VarCVDeclaration]
        ) [ConstVarDeclarationList]
        ConstCVDeclaration(
          TypeSemiConstDecl(
            Type(
             char
            ) [Type]
            SingleConstDecl(
              ConstDeclaration(
               f
                CharConst(
                 'f'
                ) [CharConst]
              ) [ConstDeclaration]
            ) [SingleConstDecl]
          ) [TypeSemiConstDecl]
        ) [ConstCVDeclaration]
      ) [ConstVarDeclarationList]
      NoMethodDeclarationList(
      ) [NoMethodDeclarationList]
    ) [Namespace]
  ) [NameSpacesList]
  ConstVarDeclarationList(
    ConstVarDeclarationList(
      ConstVarDeclarationList(
        ConstVarDeclarationList(
          ConstVarDeclarationList(
            NoConstVarDeclarationList(
            ) [NoConstVarDeclarationList]
            VarCVDeclaration(
              TypeSemiVarDecl(
                Type(
                 int
                ) [Type]
                CommaVarDeclList(
                  CommaVarDeclList(
                    NoCommaVarDeclList(
                      VDeclaration(
                       a
                      ) [VDeclaration]
                    ) [NoCommaVarDeclList]
                    VDeclaration(
                     b
                    ) [VDeclaration]
                  ) [CommaVarDeclList]
                  VArrayDeclaration(
                   c
                  ) [VArrayDeclaration]
                ) [CommaVarDeclList]
              ) [TypeSemiVarDecl]
            ) [VarCVDeclaration]
          ) [ConstVarDeclarationList]
          ConstCVDeclaration(
            TypeSemiConstDecl(
              Type(
               int
              ) [Type]
              CommaConstDeclList(
                SingleConstDecl(
                  ConstDeclaration(
                   g
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [ConstDeclaration]
                ) [SingleConstDecl]
                ConstDeclaration(
                 h
                  NumberConst(
                   2
                  ) [NumberConst]
                ) [ConstDeclaration]
              ) [CommaConstDeclList]
            ) [TypeSemiConstDecl]
          ) [ConstCVDeclaration]
        ) [ConstVarDeclarationList]
        VarCVDeclaration(
          TypeSemiVarDecl(
            Type(
             char
            ) [Type]
            NoCommaVarDeclList(
              VDeclaration(
               aa
              ) [VDeclaration]
            ) [NoCommaVarDeclList]
          ) [TypeSemiVarDecl]
        ) [VarCVDeclaration]
      ) [ConstVarDeclarationList]
      ConstCVDeclaration(
        TypeSemiConstDecl(
          Type(
           int
          ) [Type]
          SingleConstDecl(
            ConstDeclaration(
             xx
              NumberConst(
               2
              ) [NumberConst]
            ) [ConstDeclaration]
          ) [SingleConstDecl]
        ) [TypeSemiConstDecl]
      ) [ConstCVDeclaration]
    ) [ConstVarDeclarationList]
    VarCVDeclaration(
      TypeSemiVarDecl(
        Type(
         bool
        ) [Type]
        NoCommaVarDeclList(
          VDeclaration(
           abc
          ) [VDeclaration]
        ) [NoCommaVarDeclList]
      ) [TypeSemiVarDecl]
    ) [VarCVDeclaration]
  ) [ConstVarDeclarationList]
  MethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      NoFormParsOptional(
      ) [NoFormParsOptional]
      NoLocalVarDeclarationList(
      ) [NoLocalVarDeclarationList]
      StmtList(
        StmtList(
          NoStmtList(
          ) [NoStmtList]
          StmtDesignatorStatement(
            DesignatorAssign(
              DesignatorNamespace(
               Miki
               a
              ) [DesignatorNamespace]
              AssignOpEqual(
              ) [AssignOpEqual]
              ExprTerm(
                TermFactor(
                  FactorConstValue(
                    NumberConst(
                     2
                    ) [NumberConst]
                  ) [FactorConstValue]
                ) [TermFactor]
              ) [ExprTerm]
            ) [DesignatorAssign]
          ) [StmtDesignatorStatement]
        ) [StmtList]
        StmtDesignatorStatement(
          DesignatorAssign(
            DesignatorNamespace(
             Miki
             f
            ) [DesignatorNamespace]
            AssignOpEqual(
            ) [AssignOpEqual]
            ExprTerm(
              TermFactor(
                FactorConstValue(
                  CharConst(
                   'c'
                  ) [CharConst]
                ) [FactorConstValue]
              ) [TermFactor]
            ) [ExprTerm]
          ) [DesignatorAssign]
        ) [StmtDesignatorStatement]
      ) [StmtList]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  20:57:45,370 - ===================================
INFO  20:57:45,375 - Obradjuje se namespace Miki na liniji 4
INFO  20:57:45,375 - Deklarisana namespace promenljiva Miki::a na liniji 5
INFO  20:57:45,375 - Deklarisana namespace promenljiva Miki::d na liniji 6
INFO  20:57:45,375 - Deklarisana namespace promenljiva niza Miki::e na liniji 7
INFO  20:57:45,375 - Deklarisana namespace konstanta Miki::f na liniji 8
INFO  20:57:45,375 - Deklarisana promenljiva a na liniji 12
INFO  20:57:45,375 - Deklarisana promenljiva b na liniji 12
INFO  20:57:45,375 - Deklarisana promenljiva niza c na liniji 12
INFO  20:57:45,375 - Deklarisana konstanta g na liniji 14
INFO  20:57:45,375 - Deklarisana konstanta h na liniji 14
INFO  20:57:45,375 - Deklarisana promenljiva aa na liniji 15
INFO  20:57:45,375 - Deklarisana konstanta xx na liniji 16
INFO  20:57:45,376 - Deklarisana promenljiva abc na liniji 17
INFO  20:57:45,376 - Obradjuje se funkcija main na liniji 20
ERROR 20:57:45,376 - Nije dozvoljena dodela vrednosti kontstanti u liniji 23
INFO  20:57:45,376 - ===================================
ERROR 20:57:45,377 - Parsiranje NIJE uspesno zavrseno!
