INFO  22:55:14,136 - Compiling source file: C:\Users\Korisnik\Desktop\github\PP1-project\MJCompiler\test\program1.mj
INFO  22:55:14,190 - #2 program
INFO  22:55:14,190 - #41 mihailo
INFO  22:55:14,190 - #10 namespace
INFO  22:55:14,192 - #41 Miki
INFO  22:55:14,192 - #35 {
INFO  22:55:14,193 - #41 char
INFO  22:55:14,194 - #41 d
INFO  22:55:14,195 - #27 ;
INFO  22:55:14,196 - #41 char
INFO  22:55:14,196 - #41 e
INFO  22:55:14,196 - #33 [
INFO  22:55:14,196 - #34 ]
INFO  22:55:14,196 - #27 ;
INFO  22:55:14,197 - #3 const
INFO  22:55:14,197 - #41 char
INFO  22:55:14,197 - #41 f
INFO  22:55:14,197 - #24 =
INFO  22:55:14,197 - #42 'f'
INFO  22:55:14,197 - #27 ;
INFO  22:55:14,199 - #35 {
INFO  22:55:14,199 - #36 }
INFO  22:55:14,199 - #36 }
INFO  22:55:14,200 - #41 int
INFO  22:55:14,201 - #41 a
INFO  22:55:14,201 - #29 ,
INFO  22:55:14,201 - #41 b
INFO  22:55:14,201 - #29 ,
INFO  22:55:14,202 - #41 c
INFO  22:55:14,202 - #33 [
INFO  22:55:14,202 - #34 ]
INFO  22:55:14,202 - #27 ;
INFO  22:55:14,202 - #3 const
INFO  22:55:14,202 - #41 int
INFO  22:55:14,202 - #41 g
INFO  22:55:14,202 - #24 =
INFO  22:55:14,202 - #40 1
INFO  22:55:14,202 - #29 ,
INFO  22:55:14,202 - #41 h
INFO  22:55:14,202 - #24 =
INFO  22:55:14,202 - #40 2
INFO  22:55:14,202 - #27 ;
INFO  22:55:14,202 - #41 char
INFO  22:55:14,202 - #41 aa
INFO  22:55:14,202 - #27 ;
INFO  22:55:14,202 - #35 {
INFO  22:55:14,203 - #9 void
INFO  22:55:14,203 - #41 main
INFO  22:55:14,203 - #31 (
INFO  22:55:14,203 - #32 )
INFO  22:55:14,204 - #35 {
INFO  22:55:14,205 - #41 a
INFO  22:55:14,205 - #24 =
INFO  22:55:14,205 - #40 1
INFO  22:55:14,207 - #27 ;
INFO  22:55:14,208 - #41 aa
INFO  22:55:14,208 - #24 =
INFO  22:55:14,208 - #40 2
INFO  22:55:14,208 - #27 ;
INFO  22:55:14,208 - #41 a
INFO  22:55:14,208 - #25 ++
INFO  22:55:14,208 - #27 ;
INFO  22:55:14,208 - #36 }
INFO  22:55:14,208 - #36 }
INFO  22:55:14,220 - Program(
  ProgName(
   mihailo
  ) [ProgName]
  NameSpacesList(
    NoNameSpacesList(
    ) [NoNameSpacesList]
    Namespace(
      NamespaceName(
       Miki
      ) [NamespaceName]
      ConstVarDeclarationList(
        ConstVarDeclarationList(
          ConstVarDeclarationList(
            NoConstVarDeclarationList(
            ) [NoConstVarDeclarationList]
            VarCVDeclaration(
              TypeSemiVarDecl(
                Type(
                 char
                ) [Type]
                NoCommaVarDeclList(
                  VDeclaration(
                   d
                  ) [VDeclaration]
                ) [NoCommaVarDeclList]
              ) [TypeSemiVarDecl]
            ) [VarCVDeclaration]
          ) [ConstVarDeclarationList]
          VarCVDeclaration(
            TypeSemiVarDecl(
              Type(
               char
              ) [Type]
              NoCommaVarDeclList(
                VArrayDeclaration(
                 e
                ) [VArrayDeclaration]
              ) [NoCommaVarDeclList]
            ) [TypeSemiVarDecl]
          ) [VarCVDeclaration]
        ) [ConstVarDeclarationList]
        ConstCVDeclaration(
          TypeSemiConstDecl(
            Type(
             char
            ) [Type]
            SingleConstDecl(
              ConstDeclaration(
               f
                CharConst(
                 'f'
                ) [CharConst]
              ) [ConstDeclaration]
            ) [SingleConstDecl]
          ) [TypeSemiConstDecl]
        ) [ConstCVDeclaration]
      ) [ConstVarDeclarationList]
      NoMethodDeclarationList(
      ) [NoMethodDeclarationList]
    ) [Namespace]
  ) [NameSpacesList]
  ConstVarDeclarationList(
    ConstVarDeclarationList(
      ConstVarDeclarationList(
        NoConstVarDeclarationList(
        ) [NoConstVarDeclarationList]
        VarCVDeclaration(
          TypeSemiVarDecl(
            Type(
             int
            ) [Type]
            CommaVarDeclList(
              CommaVarDeclList(
                NoCommaVarDeclList(
                  VDeclaration(
                   a
                  ) [VDeclaration]
                ) [NoCommaVarDeclList]
                VDeclaration(
                 b
                ) [VDeclaration]
              ) [CommaVarDeclList]
              VArrayDeclaration(
               c
              ) [VArrayDeclaration]
            ) [CommaVarDeclList]
          ) [TypeSemiVarDecl]
        ) [VarCVDeclaration]
      ) [ConstVarDeclarationList]
      ConstCVDeclaration(
        TypeSemiConstDecl(
          Type(
           int
          ) [Type]
          CommaConstDeclList(
            SingleConstDecl(
              ConstDeclaration(
               g
                NumberConst(
                 1
                ) [NumberConst]
              ) [ConstDeclaration]
            ) [SingleConstDecl]
            ConstDeclaration(
             h
              NumberConst(
               2
              ) [NumberConst]
            ) [ConstDeclaration]
          ) [CommaConstDeclList]
        ) [TypeSemiConstDecl]
      ) [ConstCVDeclaration]
    ) [ConstVarDeclarationList]
    VarCVDeclaration(
      TypeSemiVarDecl(
        Type(
         char
        ) [Type]
        NoCommaVarDeclList(
          VDeclaration(
           aa
          ) [VDeclaration]
        ) [NoCommaVarDeclList]
      ) [TypeSemiVarDecl]
    ) [VarCVDeclaration]
  ) [ConstVarDeclarationList]
  MethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      NoFormParsOptional(
      ) [NoFormParsOptional]
      NoLocalVarDeclarationList(
      ) [NoLocalVarDeclarationList]
      StmtList(
        StmtList(
          StmtList(
            NoStmtList(
            ) [NoStmtList]
            StmtDesignatorStatement(
              DesignatorAssign(
                DesignatorIdent(
                 a
                ) [DesignatorIdent]
                AssignOpEqual(
                ) [AssignOpEqual]
                ExprTerm(
                  TermFactor(
                    FactorConstValue(
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [FactorConstValue]
                  ) [TermFactor]
                ) [ExprTerm]
              ) [DesignatorAssign]
            ) [StmtDesignatorStatement]
          ) [StmtList]
          StmtDesignatorStatement(
            DesignatorAssign(
              DesignatorIdent(
               aa
              ) [DesignatorIdent]
              AssignOpEqual(
              ) [AssignOpEqual]
              ExprTerm(
                TermFactor(
                  FactorConstValue(
                    NumberConst(
                     2
                    ) [NumberConst]
                  ) [FactorConstValue]
                ) [TermFactor]
              ) [ExprTerm]
            ) [DesignatorAssign]
          ) [StmtDesignatorStatement]
        ) [StmtList]
        StmtDesignatorStatement(
          DesignatorPlusPlus(
            DesignatorIdent(
             a
            ) [DesignatorIdent]
          ) [DesignatorPlusPlus]
        ) [StmtDesignatorStatement]
      ) [StmtList]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  22:55:14,221 - ===================================
INFO  22:55:14,224 - Obradjuje se namespace Miki na liniji 4
INFO  22:55:14,224 - Deklarisana namespace promenljiva Miki::d na liniji 6
INFO  22:55:14,224 - Deklarisana namespace promenljiva niza Miki::e na liniji 7
INFO  22:55:14,224 - Deklarisana namespace konstanta Miki::f na liniji 8
INFO  22:55:14,227 - Deklarisana promenljiva a na liniji 12
INFO  22:55:14,227 - Deklarisana promenljiva b na liniji 12
INFO  22:55:14,227 - Deklarisana promenljiva niza c na liniji 12
INFO  22:55:14,227 - Deklarisana konstanta g na liniji 13
INFO  22:55:14,227 - Deklarisana konstanta h na liniji 13
INFO  22:55:14,227 - Deklarisana promenljiva aa na liniji 14
INFO  22:55:14,227 - Obradjuje se funkcija main na liniji 17
ERROR 22:55:14,227 - Nisu odgovarajuci tipovi 19
INFO  22:55:14,227 - ===================================
ERROR 22:55:14,228 - Parsiranje NIJE uspesno zavrseno!
